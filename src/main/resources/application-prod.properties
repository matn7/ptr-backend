# Spring Data JPA properties
# Uncomment to test locally (no docker and no kubernetes)
#spring.datasource.url=jdbc:mysql://localhost:3306/pandatronik_dev?useUnicode=yes&characterEncoding=utf-8&serverTimezone=UTC

# Docker to DB on local machine communication
#spring.datasource.url=jdbc:mysql://host.docker.internal:3306/pandatronik_dev_docker?useUnicode=yes&characterEncoding=utf-8&serverTimezone=UTC

# Mysql docker container
#spring.datasource.url=jdbc:mysql://pandatronik-mysql:3306/pandatronik_dev_docker?useUnicode=yes&characterEncoding=utf-8&serverTimezone=UTC
# Kubernetes
spring.datasource.url=jdbc:mysql://${MYSQL_ADDRESS}:${MYSQL_PORT}/pandatronik_dev_docker?useUnicode=yes&characterEncoding=utf-8&serverTimezone=UTC
jasypt.encryptor.password=xf5M0da

spring.jpa.database=mysql

spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

#spring.datasource.username=ENC(dummy)
#spring.datasource.password=ENC(dummy)
spring.datasource.username=root
spring.datasource.password=password

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.db-properties.useSSL=false
#spring.datasource.initialization-mode=always
# comment below to test locally (no docker or kubernates)
spring.sql.init.data-locations=classpath:data-kube-startup.sql

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
hibernate.dialect=org.hibernate.dialect.H2Dialect


# Spring email properties
spring.mail.host = smtp.gmail.com
#spring.mail.username = ENC(dummy)
#spring.mail.password = ENC(dummy)
spring.mail.username = dummy
spring.mail.password = dummy
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.ssl.enable = true


webmaster.username = admin
webmaster.password = password
webmaster.email =

